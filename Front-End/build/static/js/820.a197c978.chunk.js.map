{"version":3,"file":"static/js/820.a197c978.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","Components/RotatingSphere/TagCloud.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","/**\n * TagCloud.js (c) 2016-2019 @ Cong Min\n * MIT License - https://github.com/mcc108/TagCloud\n */\n\nclass TagCloud {\n  /* constructor */\n  constructor(container = document.body, texts, options) {\n    const self = this;\n    if (!container || container.nodeType !== 1)\n      return new Error(\"Incorrect element type\");\n\n    // params\n    self.$container = container;\n    self.texts = texts || [];\n    self.config = { ...TagCloud._defaultConfig, ...(options || {}) };\n\n    // calculate config\n    self.radius = self.config.radius; // rolling radius\n    self.depth = 2 * self.radius; // rolling depth\n    self.size = 1.5 * self.radius; // rolling area size with mouse\n    self.maxSpeed = TagCloud._getMaxSpeed(self.config.maxSpeed); // rolling max speed\n    self.initSpeed = TagCloud._getInitSpeed(self.config.initSpeed); // rolling init speed\n    self.direction = self.config.direction; // rolling init direction\n    self.keep = self.config.keep; // whether to keep rolling after mouse out area\n    self.paused = false; // keep state to pause the animation\n\n    // create element\n    self._createElment();\n    // init\n    self._init();\n    // set elements and instances\n    TagCloud.list.push({ el: self.$el, container, instance: self });\n  }\n\n  /* static method */\n  // all TagCloud list\n  static list = [];\n\n  // default config\n  static _defaultConfig = {\n    radius: 100, // rolling radius, unit `px`\n    maxSpeed: \"normal\", // rolling max speed, optional: `slow`, `normal`(default), `fast`\n    initSpeed: \"normal\", // rolling init speed, optional: `slow`, `normal`(default), `fast`\n    direction: 135, // rolling init direction, unit clockwise `deg`, optional: `0`(top) , `90`(left), `135`(right-bottom)(default)...\n    keep: true, // whether to keep rolling after mouse out area, optional: `false`, `true`(default)(decelerate to rolling init speed, and keep rolling with mouse)\n    useContainerInlineStyles: true,\n    useItemInlineStyles: true,\n    containerClass: \"tagcloud\",\n    itemClass: \"tagcloud--item\",\n  };\n\n  // speed value\n  static _getMaxSpeed = (name) =>\n    ({ slow: 0.5, normal: 1, fast: 2 }[name] || 1);\n\n  static _getInitSpeed = (name) =>\n    ({ slow: 16, normal: 32, fast: 80 }[name] || 32);\n\n  // event listener\n  static _on(el, ev, handler, cap) {\n    if (el.addEventListener) {\n      el.addEventListener(ev, handler, cap);\n    } else if (el.attachEvent) {\n      el.attachEvent(`on${ev}`, handler);\n    } else {\n      el[`on${ev}`] = handler;\n    }\n  }\n\n  /* instance property method */\n  // create elment\n  _createElment() {\n    const self = this;\n\n    // create container\n    const $el = document.createElement(\"div\");\n    $el.className = self.config.containerClass;\n    if (self.config.useContainerInlineStyles) {\n      $el.style.position = \"relative\";\n      $el.style.width = `${2 * self.radius}px`;\n      $el.style.height = `${2 * self.radius}px`;\n    }\n\n    // create texts\n    self.items = [];\n    self.texts.forEach((text, index) => {\n      const item = self._createTextItem(text, index);\n      $el.appendChild(item.el);\n      self.items.push(item);\n    });\n    self.$container.appendChild($el);\n    self.$el = $el;\n  }\n\n  // create a text\n  _createTextItem(text, index = 0) {\n    const self = this;\n    const itemEl = document.createElement(\"span\");\n    itemEl.className = self.config.itemClass;\n    if (self.config.useItemInlineStyles) {\n      itemEl.style.willChange = \"transform, opacity, filter\";\n      itemEl.style.position = \"absolute\";\n      itemEl.style.top = \"50%\";\n      itemEl.style.left = \"50%\";\n      itemEl.style.zIndex = index + 1;\n      itemEl.style.filter = \"alpha(opacity=0)\";\n      itemEl.style.opacity = 0;\n      const transformOrigin = \"50% 50%\";\n      itemEl.style.WebkitTransformOrigin = transformOrigin;\n      itemEl.style.MozTransformOrigin = transformOrigin;\n      itemEl.style.OTransformOrigin = transformOrigin;\n      itemEl.style.transformOrigin = transformOrigin;\n      const transform = \"translate3d(-50%, -50%, 0) scale(1)\";\n      itemEl.style.WebkitTransform = transform;\n      itemEl.style.MozTransform = transform;\n      itemEl.style.OTransform = transform;\n      itemEl.style.transform = transform;\n    }\n    itemEl.innerText = text;\n    return {\n      el: itemEl,\n      ...self._computePosition(index), // distributed in appropriate place\n    };\n  }\n\n  // calculate appropriate place\n  _computePosition(index, random = false) {\n    const self = this;\n    const textsLength = self.texts.length;\n    // if random `true`, It means that a random appropriate place is generated, and the position will be independent of `index`\n    if (random) index = Math.floor(Math.random() * (textsLength + 1));\n    const phi = Math.acos(-1 + (2 * index + 1) / textsLength);\n    const theta = Math.sqrt((textsLength + 1) * Math.PI) * phi;\n    return {\n      x: (self.size * Math.cos(theta) * Math.sin(phi)) / 2,\n      y: (self.size * Math.sin(theta) * Math.sin(phi)) / 2,\n      z: (self.size * Math.cos(phi)) / 2,\n    };\n  }\n\n  _requestInterval(fn, delay) {\n    const requestAnimFrame = (\n      (() => window.requestAnimationFrame) ||\n      ((callback, element) => {\n        window.setTimeout(callback, 1000 / 60);\n      })\n    )();\n    let start = new Date().getTime();\n    const handle = {};\n    function loop() {\n      handle.value = requestAnimFrame(loop);\n      const current = new Date().getTime(),\n        delta = current - start;\n      if (delta >= delay) {\n        fn.call();\n        start = new Date().getTime();\n      }\n    }\n    handle.value = requestAnimFrame(loop);\n    return handle;\n  }\n\n  // init\n  _init() {\n    const self = this;\n\n    self.active = false; // whether the mouse is activated\n\n    self.mouseX0 = self.initSpeed * Math.sin(self.direction * (Math.PI / 180)); // init distance between the mouse and rolling center x axis\n    self.mouseY0 = -self.initSpeed * Math.cos(self.direction * (Math.PI / 180)); // init distance between the mouse and rolling center y axis\n\n    self.mouseX = self.mouseX0; // current distance between the mouse and rolling center x axis\n    self.mouseY = self.mouseY0; // current distance between the mouse and rolling center y axis\n\n    // mouseover\n    TagCloud._on(self.$el, \"mouseover\", () => {\n      self.active = true;\n    });\n    // mouseout\n    TagCloud._on(self.$el, \"mouseout\", () => {\n      self.active = false;\n    });\n    // mousemove\n    TagCloud._on(self.keep ? window : self.$el, \"mousemove\", (ev) => {\n      ev = ev || window.event;\n      const rect = self.$el.getBoundingClientRect();\n      self.mouseX = (ev.clientX - (rect.left + rect.width / 2)) / 5;\n      self.mouseY = (ev.clientY - (rect.top + rect.height / 2)) / 5;\n    });\n\n    // update state regularly\n    self._next(); // init update state\n    self.interval = self._requestInterval(() => {\n      self._next.call(self);\n    }, 10);\n  }\n\n  // calculate the next state\n  _next() {\n    const self = this;\n\n    if (self.paused) {\n      return;\n    }\n\n    // if keep `false`, pause rolling after moving mouse out area\n    if (!self.keep && !self.active) {\n      self.mouseX =\n        Math.abs(self.mouseX - self.mouseX0) < 1\n          ? self.mouseX0\n          : (self.mouseX + self.mouseX0) / 2; // reset distance between the mouse and rolling center x axis\n      self.mouseY =\n        Math.abs(self.mouseY - self.mouseY0) < 1\n          ? self.mouseY0\n          : (self.mouseY + self.mouseY0) / 2; // reset distance between the mouse and rolling center y axis\n    }\n\n    const a =\n      -(Math.min(Math.max(-self.mouseY, -self.size), self.size) / self.radius) *\n      self.maxSpeed;\n    const b =\n      (Math.min(Math.max(-self.mouseX, -self.size), self.size) / self.radius) *\n      self.maxSpeed;\n\n    if (Math.abs(a) <= 0.01 && Math.abs(b) <= 0.01) return; // pause\n\n    // calculate offset\n    const l = Math.PI / 180;\n    const sc = [\n      Math.sin(a * l),\n      Math.cos(a * l),\n      Math.sin(b * l),\n      Math.cos(b * l),\n    ];\n\n    self.items.forEach((item) => {\n      const rx1 = item.x;\n      const ry1 = item.y * sc[1] + item.z * -sc[0];\n      const rz1 = item.y * sc[0] + item.z * sc[1];\n\n      const rx2 = rx1 * sc[3] + rz1 * sc[2];\n      const ry2 = ry1;\n      const rz2 = rz1 * sc[3] - rx1 * sc[2];\n\n      const per = (2 * self.depth) / (2 * self.depth + rz2); // todo\n\n      item.x = rx2;\n      item.y = ry2;\n      item.z = rz2;\n      item.scale = per.toFixed(3);\n      let alpha = per * per - 0.25;\n      alpha = (alpha > 1 ? 1 : alpha).toFixed(3);\n\n      const itemEl = item.el;\n      const left = (item.x - itemEl.offsetWidth / 2).toFixed(2);\n      const top = (item.y - itemEl.offsetHeight / 2).toFixed(2);\n      const transform = `translate3d(${left}px, ${top}px, 0) scale(${item.scale})`;\n      itemEl.style.WebkitTransform = transform;\n      itemEl.style.MozTransform = transform;\n      itemEl.style.OTransform = transform;\n      itemEl.style.transform = transform;\n      itemEl.style.filter = `alpha(opacity=${100 * alpha})`;\n      itemEl.style.opacity = alpha;\n    });\n  }\n\n  /* export instance properties and methods */\n  // update\n  update(texts) {\n    const self = this;\n    // params\n    self.texts = texts || [];\n    // judging and processing items based on texts\n    self.texts.forEach((text, index) => {\n      let item = self.items[index];\n      if (!item) {\n        // if not had, then create\n        item = self._createTextItem(text, index);\n        Object.assign(item, self._computePosition(index, true)); // random place\n        self.$el.appendChild(item.el);\n        self.items.push(item);\n      }\n      // if had, replace text\n      item.el.innerText = text;\n    });\n    // remove redundant self.items\n    const textsLength = self.texts.length;\n    const itemsLength = self.items.length;\n    if (textsLength < itemsLength) {\n      const removeList = self.items.splice(\n        textsLength,\n        itemsLength - textsLength\n      );\n      removeList.forEach((item) => {\n        self.$el.removeChild(item.el);\n      });\n    }\n  }\n\n  // destroy\n  destroy() {\n    const self = this;\n    self.interval = null;\n    // clear in TagCloud.list\n    const index = TagCloud.list.findIndex((e) => e.el === self.$el);\n    if (index !== -1) TagCloud.list.splice(index, 1);\n    // clear element\n    if (self.$container && self.$el) {\n      self.$container.removeChild(self.$el);\n    }\n  }\n\n  pause() {\n    const self = this;\n\n    self.paused = true;\n  }\n\n  resume() {\n    const self = this;\n\n    self.paused = false;\n  }\n}\n\nconst globe = (els, texts, options) => {\n  if (typeof els === \"string\") els = document.querySelectorAll(els);\n  if (!els.forEach) els = [els];\n  const instances = [];\n  els.forEach((el) => {\n    if (el) {\n      instances.push(new TagCloud(el, texts, options));\n    }\n  });\n  return instances.length <= 1 ? instances[0] : instances;\n};\n\nexport default globe;\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","TagCloud","container","document","body","texts","options","self","this","nodeType","Error","$container","config","_defaultConfig","radius","depth","size","maxSpeed","_getMaxSpeed","initSpeed","_getInitSpeed","direction","keep","paused","_createElment","_init","list","push","el","$el","protoProps","staticProps","createElement","className","containerClass","useContainerInlineStyles","style","position","width","height","items","forEach","text","index","item","_createTextItem","appendChild","itemEl","itemClass","useItemInlineStyles","willChange","top","left","zIndex","filter","opacity","transformOrigin","WebkitTransformOrigin","MozTransformOrigin","OTransformOrigin","transform","WebkitTransform","MozTransform","OTransform","innerText","_computePosition","random","textsLength","Math","floor","phi","acos","theta","sqrt","PI","x","cos","sin","y","z","fn","delay","requestAnimFrame","window","requestAnimationFrame","callback","element","setTimeout","start","Date","getTime","handle","value","loop","call","active","mouseX0","mouseY0","mouseX","mouseY","_on","ev","event","rect","getBoundingClientRect","clientX","clientY","_next","interval","_requestInterval","abs","a","min","max","b","l","sc","rx1","ry1","rz1","rx2","ry2","rz2","per","scale","toFixed","alpha","offsetWidth","offsetHeight","assign","itemsLength","splice","removeChild","findIndex","e","handler","cap","addEventListener","attachEvent","prototype","name","slow","normal","fast","els","querySelectorAll","instances"],"sourceRoot":""}